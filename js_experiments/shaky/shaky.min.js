(function(global){"use strict";if("undefined"===typeof[].reduce||"undefined"===typeof[].forEach){throw new ReferenceError("Array.prototype.reduce and Array.prototype.forEach are expected")}function calcPoint(oldPoint){var CELL_SIZE=15;return new Point(oldPoint.x*CELL_SIZE+CELL_SIZE/2,oldPoint.y*CELL_SIZE+CELL_SIZE/2)}function Point(x,y){this.x=x;this.y=y}function Line(pointFrom,start,pointTo,end,color){this.start=start;this.pointFrom=pointFrom;this.pointTo=pointTo;this.end=end;this.color=color}Line.prototype.draw=function(ctx){function drawLineEnding(ctx,type,pointFrom,pointTo){switch(type){case"circle":ctx.bulb(pointTo);break;case"arrow":ctx.arrowhead(pointFrom,pointTo);break}}var pointFrom=calcPoint(this.pointFrom),pointTo=calcPoint(this.pointTo);ctx.strokeStyle=this.color;ctx.fillStyle=this.color;ctx.beginPath();ctx.setEndPoint(pointFrom);ctx.lineTo(pointTo);ctx.stroke();drawLineEnding(ctx,this.start,pointTo,pointFrom);drawLineEnding(ctx,this.end,pointFrom,pointTo)};function Text(point,text,color){this.point=point;this.text=text;this.color=color}Text.prototype.draw=function(ctx){var calcedPoint=calcPoint(this.point);ctx.fillStyle=this.color;ctx.fillText(this.text,calcedPoint.x,calcedPoint.y)};function parseASCIIArt(text){var lines=text.split("\n"),height=lines.length,width=lines.reduce(function(w,line){return Math.max(w,line.length)},0),possibleDirections={"-":new Point(1,0),"|":new Point(0,1)},x1,y1,currentChar,currentDirection,currentLine,color,start,end,data=[],figures=[];lines.forEach(function(currentLine,y){data[y]=currentLine.split("")});while(typeof(currentChar=findLineChar())!=="undefined"){currentDirection=possibleDirections[data[currentChar.y][currentChar.x]];color=null;while(isPartOfLine(new Point(currentChar.x-currentDirection.x,currentChar.y-currentDirection.y))){currentChar.x-=currentDirection.x;currentChar.y-=currentDirection.y;if(color===null){color=toColor(currentChar)}}start=null;if(isLineEnding(new Point(currentChar.x-currentDirection.x,currentChar.y-currentDirection.y))){currentChar.x-=currentDirection.x;currentChar.y-=currentDirection.y;start=data[currentChar.y][currentChar.x]==="*"?"circle":"arrow"}x1=currentChar.x;y1=currentChar.y;while(isPartOfLine(new Point(x1+currentDirection.x,y1+currentDirection.y))){x1+=currentDirection.x;y1+=currentDirection.y;if(color===null){color=toColor(new Point(x1,y1))}}end=null;if(isLineEnding(new Point(x1+currentDirection.x,y1+currentDirection.y))){x1+=currentDirection.x;y1+=currentDirection.y;end=data[y1][x1]==="*"?"circle":"arrow"}currentLine=new Line(new Point(currentChar.x,currentChar.y),start,new Point(x1,y1),end,color===null?"black":color);figures.push(currentLine);erase(currentLine);if(start==="arrow"){currentLine.pointFrom.x-=currentDirection.x;currentLine.pointFrom.y-=currentDirection.y}if(end==="arrow"){currentLine.pointTo.x+=currentDirection.x;currentLine.pointTo.y+=currentDirection.y}}data.forEach(function(currentLine,y){var x,start,end,text,prev,color;for(x=0;x<currentLine.length;x+=1){if(currentLine[x]!==" "){start=end=x;while(end<currentLine.length&&currentLine[end]!==" "){end+=1}text=currentLine.slice(start,end).join("");prev=figures[figures.length-1];if(prev instanceof Text&&prev.point.x+prev.text.length+1===start){prev.text=prev.text+text}else{color="black";if(text[0]==="\\"&&text[text.length-1]==="\\"){text=text.substring(1,text.length-1);color="#666"}figures.push(new Text(new Point(x,y),text,color))}x=end}}});return figures;function erase(line){function eraseChar(point,dx,dy){switch(atP(point)){case"|":case"-":case"*":case">":case"<":case"^":case"v":case"~":case"!":data[point.y][point.x]=" ";return;case"+":dx=1-dx;dy=1-dy;data[point.y][point.x]=" ";switch(atP(new Point(point.x-dx,point.y-dy))){case"|":case"!":case"+":data[point.y][point.x]="|";return;case"-":case"~":case"+":data[point.y][point.x]="-";return}switch(atP(new Point(point.x+dx,point.y+dy))){case"|":case"!":case"+":data[point.y][point.x]="|";return;case"-":case"~":case"+":data[point.y][point.x]="-";return}return}}var dx=line.pointFrom.x!==line.pointTo.x?1:0,dy=line.pointFrom.y!==line.pointTo.y?1:0,x=line.pointFrom.x+dx,y=line.pointFrom.y+dy,x_=line.pointTo.x-dx,y_=line.pointTo.y-dy;if(dx!==0||dy!==0){while(x<=x_&&y<=y_){eraseChar(new Point(x,y),dx,dy);x+=dx;y+=dy}eraseChar(line.pointFrom,dx,dy);eraseChar(line.pointTo,dx,dy)}else{eraseChar(line.pointFrom,dx,dy)}}function findLineChar(){var x,y;for(y=0;y<height;y+=1){for(x=0;x<width;x+=1){if(data[y][x]==="|"||data[y][x]==="-"){return new Point(x,y)}}}return undefined}function atP(point){return 0<=point.y&&point.y<height&&0<=point.x&&point.x<width?data[point.y][point.x]:null}function isPartOfLine(point){var c=atP(point);return c==="|"||c==="-"||c==="+"||c==="~"||c==="!"}function isLineEnding(point){var c=atP(point);return c==="*"||c==="<"||c===">"||c==="^"||c==="v"}function toColor(point){switch(atP(point)){case"~":case"!":return"#666";default:return null}}}function getShakyLinePoints(pointFrom,pointTo){var dx=pointTo.x-pointFrom.x,dy=pointTo.y-pointFrom.y,l=Math.sqrt(dx*dx+dy*dy),K=Math.sqrt(l)/1.5,k1=Math.random(),k2=Math.random(),l3=Math.random()*K,l4=Math.random()*K;return{from:new Point(pointFrom.x+dx*k1+dy/l*l3,pointFrom.y+dy*k1-dx/l*l3),to:new Point(pointFrom.x+dx*k2-dy/l*l4,pointFrom.y+dy*k2+dx/l*l4)}}function getArrowHeadCoords(pointFrom,pointTo){var dx=pointFrom.x-pointTo.x,dy=pointFrom.y-pointTo.y,l=20,alpha,alpha3,alpha4;alpha=Math.atan(dy/dx);if(dy===0){alpha=dx<0?-Math.PI:0}alpha3=alpha+.5;alpha4=alpha-.5;return{from:new Point(pointTo.x+l*Math.cos(alpha3),pointTo.y+l*Math.sin(alpha3)),to:new Point(pointTo.x+l*Math.cos(alpha4),pointTo.y+l*Math.sin(alpha4))}}function enhanceCtx(ctx){var endPoint=new Point(0,0);function setEndPoint(newPoint){endPoint=newPoint}function lineTo(mainPoint){var lineCoords=getShakyLinePoints(endPoint,mainPoint);ctx.moveTo(endPoint.x,endPoint.y);ctx.bezierCurveTo(lineCoords.from.x,lineCoords.from.y,lineCoords.to.x,lineCoords.to.y,mainPoint.x,mainPoint.y);setEndPoint(mainPoint)}function bulb(coords){var i;function fuzziness(){return Math.random()*2-1}for(i=0;i<3;i+=1){ctx.beginPath();ctx.arc(coords.x+fuzziness(),coords.y+fuzziness(),5,0,Math.PI*2,true);ctx.closePath();ctx.fill()}}function arrowhead(pointFrom,pointTo){var arrowCoords=getArrowHeadCoords(pointFrom,pointTo);ctx.beginPath();setEndPoint(arrowCoords.from);lineTo(pointTo);ctx.stroke();ctx.beginPath();setEndPoint(arrowCoords.to);lineTo(pointTo);ctx.stroke()}ctx.setEndPoint=setEndPoint;ctx.lineTo=lineTo;ctx.bulb=bulb;ctx.arrowhead=arrowhead;return ctx}function getCanvasWH(figures){var width=0,height=0;figures.forEach(function(figure){var point;if(figure instanceof Line){point=calcPoint(figure.pointTo);width=Math.max(width,point.x+1);height=Math.max(height,point.y+1)}});return{width:width,height:height}}function drawDiagram(text,canvas){var figures,ctx,canvasWH,canvasClass;if("undefined"===typeof text||"undefined"===typeof canvas){throw new TypeError("drawDiagram must be called with a string and canvas as parameters")}if("[object String]"!==Object.prototype.toString.call(text)){throw new TypeError("drawDiagram needs a string as its first parameter")}canvasClass=Object.prototype.toString.call(canvas);if("[object Canvas]"!==canvasClass&&"[object HTMLCanvasElement]"!==canvasClass||!("getContext"in canvas)){throw new TypeError("drawDiagram needs a canvas element as its second parameter")}figures=parseASCIIArt(text);ctx=canvas.getContext("2d");canvasWH=getCanvasWH(figures);canvas.width=canvasWH.width+10;canvas.height=canvasWH.height+10;ctx.lineWidth=3;ctx.font="20pt 'Gloria Hallelujah'";ctx.textBaseline="middle";ctx=enhanceCtx(ctx);figures.forEach(function(figure){figure.draw(ctx)})}if(typeof exports!=="undefined"){if(typeof module!=="undefined"&&module.exports){exports=module.exports=drawDiagram}exports.drawDiagram=drawDiagram}else{window.drawDiagram=drawDiagram}})(this);